// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FogliettaA_5I_EventiEF.Migrations
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Appartenente", b =>
                {
                    b.Property<string>("IdAppartenenza")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoriaNome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Categorie")
                        .HasColumnType("TEXT");

                    b.Property<string>("CodEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventoCodEvento")
                        .HasColumnType("TEXT");

                    b.HasKey("IdAppartenenza");

                    b.HasIndex("CategoriaNome");

                    b.HasIndex("EventoCodEvento");

                    b.ToTable("Appertenenti");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Categoria", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Nome");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Evento", b =>
                {
                    b.Property<string>("CodEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artisti")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("MembroNickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeProvincia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TerritorioPNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("titolo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CodEvento");

                    b.HasIndex("MembroNickname");

                    b.HasIndex("TerritorioPNome");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Membro", b =>
                {
                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Nickname");

                    b.ToTable("Membri");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Post", b =>
                {
                    b.Property<string>("IdPost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Commento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MembroNickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Voto")
                        .HasColumnType("REAL");

                    b.HasKey("IdPost");

                    b.HasIndex("MembroNickname");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.TerritorioP", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Nome");

                    b.ToTable("TerritoriP");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Appartenente", b =>
                {
                    b.HasOne("FogliettaA_5I_EventiEF.Data.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaNome");

                    b.HasOne("FogliettaA_5I_EventiEF.Data.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoCodEvento");

                    b.Navigation("Categoria");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Evento", b =>
                {
                    b.HasOne("FogliettaA_5I_EventiEF.Data.Membro", "Membro")
                        .WithMany()
                        .HasForeignKey("MembroNickname")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FogliettaA_5I_EventiEF.Data.TerritorioP", "TerritorioP")
                        .WithMany()
                        .HasForeignKey("TerritorioPNome")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membro");

                    b.Navigation("TerritorioP");
                });

            modelBuilder.Entity("FogliettaA_5I_EventiEF.Data.Post", b =>
                {
                    b.HasOne("FogliettaA_5I_EventiEF.Data.Membro", "Membro")
                        .WithMany()
                        .HasForeignKey("MembroNickname");

                    b.Navigation("Membro");
                });
#pragma warning restore 612, 618
        }
    }
}
